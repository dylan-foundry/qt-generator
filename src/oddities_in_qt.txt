 - QObject::event is public while all subclasses reimplement it as protected

 - QAbstractFileEngine typedef's QAbstractFileEngineIterator to Iterator
   but QAFEI doesn't exist and the functions using it only return 0. This
   looks pretty broken to me...

 - QObject forward declares QWidget which is in another lib. QSignalMapper has 
   functions that take QWidget * too... This works just fine but is strictly not
   nice.

 - virtual functions have different protection in various classes.
   public QObject::event() -> protected QWidget::event()

 - anonymous enums. Why do we have these?

 - Private signals in moc_run? QAbstractItemModel is the culprit...

 - Protected enums are a bit tricky.
 
 - Protected function 'QTextCodec()' in final class 'QTextCodec'
 
 - Overloaded signals or signals whose parameters take default values: 
 -  -  QProcess::finished
 -  -  QSignalMapper::mapped
 -  -  QComboBox::activated
 
 - public or protected Members (and no accessors) all over the place
 
 - No define which removes all platform specific symbols and settings (e.g. Q_OS_NONE)
 