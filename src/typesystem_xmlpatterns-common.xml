<?xml version="1.0"?>
<typesystem>
    <namespace-type name="QPatternist"/>
    <namespace-type name="QPatternistSDK"/>

    <enum-type name="QXmlNodeModelIndex::NodeKind"/>
    <enum-type name="QXmlNodeModelIndex::DocumentOrder"/>
    <enum-type name="QXmlNodeModelIndex::Axis"/>
    <enum-type name="QSimpleXmlNodeModel::SimpleAxis"/>
    <enum-type name="QAbstractXmlNodeModel::NodeCopySetting"/>

<!--    <object-type name="QAbstractMessageHandler"/> -->
    <object-type name="QAbstractUriResolver"/>
<!--    <object-type name="QAbstractXmlForwardIterator"/> -->
    <value-type name="QAbstractXmlNodeModel">
        <modify-function signature="QAbstractXmlNodeModel()"> <remove/> </modify-function>
<!--    <modify-function signature="sequencedTypedValue(const QXmlNodeModelIndex) const"> <remove/> </modify-function> -->
<!--    <modify-function signature="type(const QXmlNodeModelIndex) const"> <remove/> </modify-function> -->
        <modify-function signature="namespaceForPrefix(const QXmlNodeModelIndex, const short) const"> <remove/> </modify-function>
        <modify-function signature="isDeepEqual(const QXmlNodeModelIndex, const QXmlNodeModelIndex) const"> <remove/> </modify-function>
<!--    <modify-function signature="sendNamespaces(const QXmlNodeModelIndex, short) const"> <remove/> </modify-function> -->

    </value-type>

    <value-type name="QAbstractXmlReceiver"/>
    <value-type name="QSimpleXmlNodeModel"/> 
    <value-type name="QSourceLocation"/>
    <object-type name="QXmlFormatter"/>
    <value-type name="QXmlItem"/>
    <value-type name="QXmlName">
        <modify-function signature="localName()const"> <remove/> </modify-function>
        <modify-function signature="prefix()const"> <remove/> </modify-function>
        <modify-function signature="hasPrefix()const"> <remove/> </modify-function>
        <modify-function signature="hasNamespace()const"> <remove/> </modify-function>
        <modify-function signature="namespaceURI()const"> <remove/> </modify-function>
        <modify-function signature="isLexicallyEqual(const QXmlName)const"> <remove/> </modify-function>
        <modify-function signature="setPrefix(const short)"> <remove/> </modify-function>
        <modify-function signature="setNamespaceURI(const short)"> <remove/> </modify-function>
        <modify-function signature="setLocalName(const short)"> <remove/> </modify-function>

        <modify-function signature="code()const"> <remove/> </modify-function>
    </value-type>
    <value-type name="QXmlNamePool"/>
    <value-type name="QXmlNodeModelIndex">
        <modify-function signature="name() const"> <remove/> </modify-function>
        <modify-function signature="root() const"> <remove/> </modify-function>
<!--    <modify-function signature="iterate(const Axis) const"> <remove/> </modify-function> -->
<!--    <modify-function signature="sequencedTypedValue() const"> <remove/> </modify-function> -->
        <modify-function signature="documentUri() const"> <remove/> </modify-function>
        <modify-function signature="baseUri() const"> <remove/> </modify-function>
        <modify-function signature="kind() const"> <remove/> </modify-function>
        <modify-function signature="isDeepEqual(const QXmlNodeModelIndex) const"> <remove/> </modify-function>
        <modify-function signature="compareOrder(const QXmlNodeModelIndex) const"> <remove/> </modify-function>
<!--    <modify-function signature="sendNamespaces(const QExplicitlySharedDataPointer) const"> <remove/> </modify-function> -->
        <modify-function signature="namespaceBindings() const"> <remove/> </modify-function>
        <modify-function signature="namespaceForPrefix(const short) const"> <remove/> </modify-function> 
        <modify-function signature="stringValue() const"> <remove/> </modify-function>
<!--    <modify-function signature="type() const"> <remove/> </modify-function> -->
        <modify-function signature="is(const QXmlNodeModelIndex) const"> <remove/> </modify-function>
        <modify-function signature="reset()"> <remove/> </modify-function>  

        
    </value-type>


    <object-type name="QXmlQuery">
        <!-- FIXME should not be removed-->
        <modify-function signature="evaluateToStringList(QStringList&lt;QString&gt;*)const"> <remove/> </modify-function>
    </object-type>
    <object-type name="QXmlResultItems"/>
    <object-type name="QXmlSerializer"/>


    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QAbstractXmlNodeModel::sequencedTypedValue', unmatched return type 'QPatternist::ItemIteratorPtr'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QAbstractXmlNodeModel::sequencedTypedValue', unmatched return type 'QPatternist::ItemIteratorPtr'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QAbstractXmlNodeModel::sendNamespaces', unmatched parameter type 'QExplicitlySharedDataPointer&lt;QAbstractXmlReceiver&gt; const&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QAbstractXmlNodeModel::iterate', unmatched return type 'QXmlNodeModelIndexIteratorPointer'"/>

    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QAbstractXmlNodeModel::copyNodeTo', unmatched parameter type 'QExplicitlySharedDataPointer&lt;QAbstractXmlReceiver&gt; const&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QAbstractXmlNodeModel::type', unmatched return type 'QPatternist::ItemTypePtr'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QSimpleXmlNodeModel::iterate', unmatched return type 'QXmlNodeModelIndexIteratorPointer'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QSimpleXmlNodeModel::mapToItem', unmatched parameter type 'QExplicitlySharedDataPointer&lt;QPatternist::DynamicContext&gt; const&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QSimpleXmlNodeModel::mapToSequence', unmatched return type 'QAbstractXmlForwardIterator&lt;QXmlNodeModelIndex&gt;::Ptr'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QXmlItem::QXmlItem', unmatched parameter type 'QPatternist::Item const&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QAbstractXmlReceiver::item', unmatched parameter type 'QPatternist::Item const&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QAbstractXmlReceiver::sendAsNode', unmatched parameter type 'QPatternist::Item const&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QXmlSerializer::item', unmatched parameter type 'QPatternist::Item const&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QXmlNodeModelIndex::QXmlNodeModelIndex', unmatched parameter type 'QPatternist::NodeIndexStorage const&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QXmlNodeModelIndex::sequencedTypedValue', unmatched return type 'QExplicitlySharedDataPointer&lt;QAbstractXmlForwardIterator&lt;QPatternist::Item&gt;&gt;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QXmlNodeModelIndex::sendNamespaces', unmatched parameter type 'QExplicitlySharedDataPointer&lt;QAbstractXmlReceiver&gt; const&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QXmlNodeModelIndex::iterate', unmatched return type 'QExplicitlySharedDataPointer&lt;QAbstractXmlForwardIterator&lt;QXmlNodeModelIndex&gt;&gt;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QXmlNodeModelIndex::type', unmatched return type 'QPatternist::ItemTypePtr'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QXmlQuery::setMessageHandler', unmatched parameter type 'QAbstractMessageHandler*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QXmlQuery::evaluateToReceiver', unmatched parameter type 'QAbstractXmlReceiverPointer const&amp;'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QXmlQuery::messageHandler', unmatched return type 'QAbstractMessageHandler*'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: horribly broken type ''"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QPatternist::makeListIterator', unmatched return type 'QAbstractXmlForwardIterator&lt;T&gt;::Ptr'"/>
    <suppress-warning text="WARNING(MetaJavaBuilder) :: skipping function 'QPatternist::makeVectorIterator', unmatched return type 'QAbstractXmlForwardIterator&lt;T&gt;::Ptr'"/>
    
</typesystem>
